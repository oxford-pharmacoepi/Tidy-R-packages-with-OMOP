# Set up your environment

To build an R package you will need [R](https://cran.r-project.org/bin/windows/base/) installed and an IDE: preferably [R Studio](https://posit.co/download/rstudio-desktop/) or [Positron](https://github.com/posit-dev/positron/releases).

You will need to install [devtools](https://devtools.r-lib.org) and [usethis](https://usethis.r-lib.org) as they are key to follow the different steps to get started.

```{r, eval=FALSE}
# use base R
install.packages(c("usethis", "devtools"))

# or pak (recommended)
library(pak)
pkg_install(c("usethis", "devtools"))
```

To work with the Tidy R OMOP ecosystem, you will also need to install the [omopgenerics](https://darwin-eu-dev.github.io/omopgenerics/) package. Alongside with other packages that may be useful:

-   [PatientProfiles](https://darwin-eu-dev.github.io/PatientProfiles/) for data manipulation.
-   [CodelistDiagnostics](https://darwin-eu.github.io/CodelistDiagnostics/) to query the vocabularies.
-   [visOmopResults](https://darwin-eu.github.io/visOmopResults/) for data visualisation.

You can see the list of Tidy R packages in our [website](https://oxford-pharmacoepi.github.io/Oxinfer/packages/summary.html).

## Create an empty package

To create an empty package you can do it with *usethis*:

```{r, eval=FALSE}
library(usethis)

create_package(path = "path/to/folder") 
```

::: {.callout-tip collapse="true"}
### Package name

The package will be named by the name of the folder.
:::

## Add a license

Adding licenses is very important so you are protected and users know how they can use your product. In general we release using the [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0) license.

You can add a license easily with usethis:

```{r, eval=FALSE}
use_apl2_license()
```

This will add the `LICENSE.md` file and populate the DESCRIPTION file with the relevant license field.

::: {.callout-note collapse="true"}
### License agreements

License agreements supported by `usethis` are:

-   More permissive:

    -   [MIT](https://choosealicense.com/licenses/mit/): simple and permissive.
    -   [Apache 2.0](https://choosealicense.com/licenses/apache-2.0/): MIT + provides patent protection.

-   Copyleft:

    -   [GPL v2](https://choosealicense.com/licenses/gpl-2.0/): requires sharing of improvements.
    -   [GPL v3](https://choosealicense.com/licenses/gpl-3.0/): requires sharing of improvements.
    -   [AGPL v3](https://choosealicense.com/licenses/agpl-3.0/): requires sharing of improvements.
    -   [LGPL v2.1](https://choosealicense.com/licenses/lgpl-2.1/): requires sharing of improvements.
    -   [LGPL v3](https://choosealicense.com/licenses/lgpl-3.0/): requires sharing of improvements.

-   Creative commons licenses appropriate for data packages:

    -   [CC0](https://creativecommons.org/publicdomain/zero/1.0/): dedicated to public domain.
    -   [CC-BY](https://creativecommons.org/licenses/by/4.0/): Free to share and adapt, must give appropriate credit.

```{r, eval=FALSE}
use_mit_license(copyright_holder = NULL)

use_gpl_license(version = 3, include_future = TRUE)

use_agpl_license(version = 3, include_future = TRUE)

use_lgpl_license(version = 3, include_future = TRUE)

use_apache_license(version = 2, include_future = TRUE)

use_cc0_license()

use_ccby_license()

use_proprietary_license(copyright_holder = "...")
```
:::

## Create a first mock function

The `R` folder contains the relevant files for your package

## Check the package

## Create a simple test

We will see 

After adding the test we should check the test works properly. You can run the tests of the active file using:

```{r, eval=FALSE}
test_active_file()
```

Or you can run all the tests of the package:

```{r, eval=FALSE}
test()
```

## Create `README.Rmd`

## Create website

## Set up GitHub

GitHub actions are very useful to ensure the continuous integration workflow. The fifth part of the book is dedicated to [GitHub and GitHub Actions](../github/index.qmd) at that stage you will learn how to use github for:

-   [Automatic checking your package](../github/automatic_checks.qmd)
-   [Automatic deployment of a documentation website for your package](../github/automatic_website.qmd)
-   [Automatic assessment of test coverage](../github/test_coverage.qmd)
-   [Automatic testing across multiple sources](../github/testing_multiple_dbms.qmd)

## Package template

Although the first time it is quite nice to do all the steps one by one there is a template with all those steps done, you can create a new package repo using this [link](https://github.com/new?template_name=EmptyPackageTemplate&template_owner=oxford-pharmacoepi).

::: {.callout-note collapse="true"}
### Template link

The GitHub template link can be found: <https://github.com/oxford-pharmacoepi/EmptyPackageTemplate>.

:::
